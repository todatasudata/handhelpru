# Generated by Django 3.1.6 on 2021-02-03 13:17

import cons.blocks
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('wagtailimages', '0022_uploadedimage'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('number', models.IntegerField(verbose_name='Номер')),
                ('publish_date', models.DateField(null=True, verbose_name='Дата')),
                ('main_client', models.CharField(blank=True, max_length=100, verbose_name='Основной клиент')),
                ('main_question', wagtail.core.fields.RichTextField(blank=True, verbose_name='Основной вопрос')),
                ('content', wagtail.core.fields.StreamField([('question', wagtail.core.blocks.StreamBlock([('client', cons.blocks.ClientBlock()), ('question_text', cons.blocks.QuestionTextBlock())])), ('answer', wagtail.core.blocks.StreamBlock([('author', cons.blocks.AuthorBlock()), ('answer_text', cons.blocks.AnswerTextBlock())]))], blank=True, verbose_name='Содержание')),
            ],
            options={
                'verbose_name': 'Консультация',
                'verbose_name_plural': 'Консультации',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FAQPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('content', wagtail.core.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Частые вопросы',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ConsPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='cons.conspage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cons_conspagetag_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='conspage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='cons.ConsPageTag', to='taggit.Tag', verbose_name='Теги'),
        ),
        migrations.CreateModel(
            name='ConsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('note', wagtail.core.fields.RichTextField(blank=True, verbose_name='Примечание')),
                ('ads', wagtail.core.fields.StreamField([('ad', wagtail.core.blocks.RichTextBlock(help_text='Объявление', label='Объявление'))], blank=True)),
                ('last_consults_note', wagtail.core.fields.RichTextField(blank=True, verbose_name='О режиме публикации')),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Страница консультаций',
            },
            bases=('wagtailcore.page',),
        ),
    ]
